package com.catt.wfx.repository.entity.extractOrder;

import com.catt.common.base.repository.entity.BaseEntity;
import com.fasterxml.jackson.annotation.JsonAutoDetect;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

/**
 * 提现单据信息实体类
 * 
 * @author chen chusheng
 * @date 2017-03-03 16:59:31
 * @version V1.0
 */
@Entity
@JsonAutoDetect
@Table(name = "t_extract_order")
public class ExtractOrder extends BaseEntity {

	private static final long serialVersionUID = 1L;
	
	
	/**
	 * 用户标识
	 */
	private Long cusId;
	/**
	 * 单据状态: 1-待打款  2-已完成  3-打款失败
	 */
	private Integer status;
	/**
	 * 单据编号<p><br>
	 * 单据编号
	 */
	private String orderNo;
	/**
	 * 提取金额<p><br>
	 * 金额单位为分
	 */
	private Double money;
	/**
	 * 开户银行<p><br>
	 * 将常用银行定义为枚举
	 */
	private Integer bankType;
	/**
	 * 开户支行
	 */
	private String branch;
	/**
	 * 账户名称<p><br>
	 * 需进行可逆加密
	 */
	private String bankAccount;
	/**
	 * 银行卡号<p><br>
	 * 需进行可逆加密
	 */
	private String bankCard;
	/**
	 * 创建人员标识<p><br>
	 * 创建人员标识
	 */
	private Long createdId;
	/**
	 * 创建人员名称<p><br>
	 * 创建人员名称
	 */
	private String createdName;

	@Column(name = "i_cus_id")
	public Long getCusId() {
		return cusId;
	}

	public void setCusId(Long cusId) {
		this.cusId = cusId;
	}

	@Column(name = "i_status")
	public Integer getStatus() {
		return status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "s_order_no", length = 50)
	public String getOrderNo() {
		return orderNo;
	}

	public void setOrderNo(String orderNo) {
		this.orderNo = orderNo;
	}

	@Column(name = "i_money")
	public Double getMoney() {
		return money;
	}

	public void setMoney(Double money) {
		this.money = money;
	}

	@Column(name = "i_bank_type")
	public Integer getBankType() {
		return bankType;
	}

	public void setBankType(Integer bankType) {
		this.bankType = bankType;
	}

	@Column(name = "s_branch", length = 256)
	public String getBranch() {
		return branch;
	}

	public void setBranch(String branch) {
		this.branch = branch;
	}

	@Column(name = "s_bank_account", length = 128)
	public String getBankAccount() {
		return bankAccount;
	}

	public void setBankAccount(String bankAccount) {
		this.bankAccount = bankAccount;
	}

	@Column(name = "s_bank_card", length = 128)
	public String getBankCard() {
		return bankCard;
	}

	public void setBankCard(String bankCard) {
		this.bankCard = bankCard;
	}

	@Column(name = "i_created_id")
	public Long getCreatedId() {
		return createdId;
	}

	public void setCreatedId(Long createdId) {
		this.createdId = createdId;
	}

	@Column(name = "s_created_name", length = 32)
	public String getCreatedName() {
		return createdName;
	}

	public void setCreatedName(String createdName) {
		this.createdName = createdName;
	}

	/**
	 * 单据状态枚举
	 * 1-待打款  2-已完成  3-打款失败
	 */
	public enum Status {

		/**
		 * 待打款
		 */
		Extract(1, "待打款"),

		/**
		 * 已完成
		 */
		Finish(2, "已完成"),

		/**
		 * 打款失败
		 */
		ExtractFail(3, "打款失败");

		/**
		 * 枚举值
		 */
		private Integer value;

		/**
		 * 枚举中文
		 */
		private String name;

		/**
		 * 构造方法
		 *
		 * @param value 枚举值
		 * @param name  枚举中文
		 */
		Status(Integer value, String name) {
			this.value = value;
			this.name = name;
		}

		/**
		 * 由数字得是否多实例枚举对象
		 *
		 * @param value 枚举值
		 * @return 返回中文
		 */
		public static Status getEnum(int value) {
			Status[] source = Status.values();
			for (int i = 0; i < source.length; i++) {
				if (source[i].getValue() == value) {
					return source[i];
				}
			}
			return null;
		}

		/**
		 * 取值
		 *
		 * @return 返回枚举值
		 */
		public int getValue() {
			return this.value;
		}

		/**
		 * 取中文名称
		 *
		 * @return 返回枚举中文
		 */
		public String getName() {
			return this.name;
		}
	}
}

