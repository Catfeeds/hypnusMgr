package com.catt.wfx.service.productMgr;

import com.catt.common.base.pojo.search.Page;
import com.catt.common.base.pojo.search.Pageable;
import com.catt.wfx.repository.data.vo.productMgr.ProductVo;
import com.catt.wfx.repository.entity.productMgr.ProductInfo;
import com.catt.wfx.repository.entity.productMgr.ProductPackage;
import com.catt.wfx.repository.form.productMgr.ProductForm;

import java.util.List;
import java.util.Map;

/**
 * Description:商品管理服务接口
 * Created by 2017-01-09  14:31.
 * author: Zhou mingxiang
 */
public interface ProductService {
    /**
     * 获取商品信息列表
     *
     * @param productForm
     * @param pageable
     * @return
     */
    Page<Map> getProductInfoByPage(ProductForm productForm, Pageable pageable);

    /**
     * 获取商品信息
     *
     * @param id 商品标识
     * @return
     */
    Map getProductInfoAndAttr(Long id);

    /**
     * 修改商品信息
     *
     * @param productVo 商品信息vo
     * @param coverpic  图片信息
     * @param attrJson    商品参数Json
     * @param specJson      商品规格Json
     */
    void update(ProductVo productVo, String coverpic, String attrJson, String specJson);

    /**
     * 保存商品信息
     *
     * @param productVo 商品信息vo
     * @param coverpic  图片信息
     * @param attrJson    商品参数Json
     * @param specJson      商品规格Json
     */
    void save(ProductVo productVo, String coverpic, String attrJson, String specJson);

    /**
     * 删除商品
     *
     * @param ids 商品标识集合
     */
    void delete(Long[] ids);

    /**
     * 查询发布商品列表
     * @param pageable 分页信息
     * @param zhName 商品名称
     * @param cateId 商品类型
     * @param status 状态（已下架、销售中、已售罄）
     * @param minStockNum 库存数量<=minStockNum
     * @return
     */
    Page<Map> findPageWithSaleInfo(Pageable pageable, String zhName, Long cateId, Integer status, Integer minStockNum);

    /**
     * 查询发布商品列表(根据当前用户所属厂家过滤)
     * @param pageable 分页信息
     * @param zhName 商品名称
     * @param cateId 商品类型
     * @param status 状态（已下架、销售中、已售罄）
     * @param minStockNum 库存数量<=minStockNum
     * @param factoryId 厂家id(为空时，代表自营，可以看到所有商品)
     * @return
     */
    Page<Map> findPageWithSaleInfoByFactoryId(Pageable pageable, String zhName, Long cateId, Integer status, Integer minStockNum, Long factoryId);

    /**
     * 查询开店套餐列表
     * @param pageable 分页信息
     * @param zhName 商品名称
     * @param status 状态（已下架、销售中、已售罄）
     * @return
     */
    Page<Map> findPackagePage(Pageable pageable, String zhName, Integer status);

    /**
     * 获取发布的商品信息列表
     *
     * @param productForm 查询表单
     * @param pageable 分页参数
     * @return
     */
    Page<Map> findPublishPage(ProductForm productForm, Pageable pageable);

    /**
     * 删除开店套餐
     * @param ids 套餐商品标识数组
     * @return
     */
    void deletePackage(Long[] ids);

    /**
     * @param productInfo 套餐
     * @param coverpic 套餐图片json字符串
     * @param packageList 套餐详情
     */
    void savePackage(ProductInfo productInfo, String coverpic, List<ProductPackage> packageList);

    /**
     * 上架/下架
     * @param ids 商品标识数组
     * @param status 状态: 2-上架 3-下架
     * @return
     */
    void updateStatus(Long[] ids, Integer status);
}
