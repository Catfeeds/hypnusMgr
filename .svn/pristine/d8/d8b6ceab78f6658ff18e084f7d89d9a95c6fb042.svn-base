package com.catt.wfx.repository.dao.productMgr;


import com.catt.common.base.pojo.search.Page;
import com.catt.common.base.pojo.search.Pageable;
import com.catt.common.base.repository.dao.BaseDao;
import com.catt.wfx.repository.entity.productMgr.ProductInfo;
import com.catt.wfx.repository.form.productMgr.ProductForm;
import com.catt.wfx.repository.form.productMgr.ProductFromApp;

import java.util.List;
import java.util.Map;

/**
 * 商品信息表Dao接口
 *
 * @author 周明祥
 * @version V1.0
 * @date 2017-01-09 11:37:12
 */
public interface ProductInfoDao extends BaseDao<ProductInfo, Long> {
    /**
     * 获取商品信息列表
     *
     * @param productForm
     * @param pageable
     * @return
     */
    Page<Map> getProductInfoByPage(ProductForm productForm, Pageable pageable);

    /**
     * 查询发布商品列表
     *  @param pageable 分页信息
     * @param zhName   商品名称
     * @param cateId   商品类型
     * @param status   状态（已下架、销售中、已售罄）
     * @param minStockNum 库存数量<=minStockNum
     */
    Page<Map> findPageWithSaleInfo(Pageable pageable, String zhName, Long cateId, Integer status, Integer minStockNum);

    /**
     * 查询开店套餐列表
     *
     * @param pageable 分页信息
     * @param zhName   商品名称
     * @param status   状态（已下架、销售中、已售罄）
     * @return
     */
    Page<Map> findPackagePage(Pageable pageable, String zhName, Integer status);

    /**
     * 获取发布的商品信息列表
     *
     * @param productForm 查询表单
     * @param pageable    分页参数
     * @return
     */
    Page<Map> findPublishPage(ProductForm productForm, Pageable pageable);

    /**
     * 获取商品文案列表
     *
     * @param zhName   商品名称
     * @param cateId   分类标识
     * @param pageable
     * @return
     */
    Page<Map> getProductDocumentInfo(String zhName, Long cateId, Pageable pageable);

    /**
     * 获取商品信息列表(app接口)
     *
     * @param productFromApp    商品信息from
     * @param pageable
     * @return
     */
    Page<Map> findProductInfoByPage(ProductFromApp productFromApp, Pageable pageable);

    /**
     * 获取商品信息列表(微信商城接口)
     *
     * @param cusId       用户标识
     * @param cateList    商品分类集合
     * @param pageable
     * @param productName 商品名称
     * @return
     */
    Page<Map> findProductInfoByPage4Wechat(Long cusId, List<Long> cateList, Pageable pageable, String productName);


    /**
     * 获取商品详细信息(app接口)
     *
     * @param cusId 用户标识
     * @param id    商品标识
     * @return
     */
    List<Map> findProductInfoDetail(Long cusId, Long id);


    /**
     * 获取商品列表（排除已选商品）
     * @param activityProductIds 活动商品标识 not in
     * @param zhName 商品名称
     * @param cateId 商品分类
     * @param pageable 分页参数
     * @return
     */
    Page<Map> findActivitySelectProductPage(List<Long> activityProductIds, String zhName, Long cateId, Pageable pageable);
}
