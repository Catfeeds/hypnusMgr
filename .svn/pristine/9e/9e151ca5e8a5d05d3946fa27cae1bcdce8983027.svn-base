package com.catt.wfx.repository.entity.productMgr;

import com.catt.common.base.repository.entity.BaseEntity;
import com.fasterxml.jackson.annotation.JsonAutoDetect;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Transient;
import java.util.Date;

/**
 * 商品信息表实体类
 *
 * @author 周明祥
 * @version V1.0
 * @date 2017-01-09 11:37:12
 */
@Entity
@JsonAutoDetect
@Table(name = "T_PRODUCT_INFO")
public class ProductInfo extends BaseEntity {

    /**
     * 用于从附件表获取附件
     */
    public static final String TABLE_NAME = "T_PRODUCT_INFO";
    public static final String PIC_PATH = "S_PIC_PATH";
    private static final long serialVersionUID = 1L;


    /**
     * <pre>
     * 商品中文名称
     * </pre>
     */
    private String zhName;
    /**
     * <pre>
     * 商品英文名称
     * </pre>
     */
    private String enName;
    /**
     * <pre>
     * 商品类型
     * 1-单品
     *  2-套餐
     * </pre>
     */
    private Integer type;
    /**
     * <pre>
     * 厂家标识
     * </pre>
     */
    private Long factoryId;
    /**
     * <pre>
     * 商品品牌
     * </pre>
     */
    private String brandName;
    /**
     * <pre>
     * 商品状态 已发布（已上架、已下架）
     * 1-待发布
     * 2-已上架
     * 3-已下架
     * </pre>
     */
    private Integer status;
    /**
     * <pre>
     * 商品编码
     * </pre>
     */
    private String code;
    /**
     * <pre>
     * 商品条码
     * 商品条码
     * </pre>
     */
    private String barCode;
    /**
     * <pre>
     * 商品种类标识
     * </pre>
     */
    private Long cateId;
    /**
     * <pre>
     * 商品种类名称
     * </pre>
     */
    private String cateName;

    /**
     * <pre>
     * 商品简介
     * 商品简介
     * </pre>
     */
    private String introduce;
    /**
     * <pre>
     * 商品单位
     * 枚举
     * </pre>
     */
    private Integer unit;
    /**
     * <pre>
     * 商品封面
     * </pre>
     */
    private String headPath;
    /**
     * <pre>
     * 商品图片
     * </pre>
     */
    private String picPath;
    /**
     * <pre>
     * 上架店主数量
     * </pre>
     */
    private Integer shopSales;
    /**
     * <pre>
     * 是否删除
     * 0-否
     * 1-是
     * </pre>
     */
    private Integer delFlag;

    /**
     * <pre>
     * 创建人员标识
     * </pre>
     */
    private Long createdId;
    /**
     * <pre>
     * 创建人员名称
     * </pre>
     */
    private String createdName;

    /**
     * <pre>
     * 备注
     * </pre>
     */
    private String remark;

    /**
     * 排序序号
     */
    private Integer seq;

    /**
     * 上架日期
     */
    private Date shelveTime;

    /**
     * 套餐价格
     * 商品类型为套餐时有效
     */
    private Double packagePrice;

    @Column(name = "S_ZH_NAME", length = 128)
    public String getZhName() {
        return zhName;
    }

    public void setZhName(String zhName) {
        this.zhName = zhName;
    }

    @Column(name = "S_EN_NAME", length = 128)
    public String getEnName() {
        return enName;
    }

    public void setEnName(String enName) {
        this.enName = enName;
    }

    @Column(name = "I_TYPE")
    public Integer getType() {
        return type;
    }

    public void setType(Integer type) {
        this.type = type;
    }

    @Column(name = "I_FACTORY_ID")
    public Long getFactoryId() {
        return factoryId;
    }

    public void setFactoryId(Long factoryId) {
        this.factoryId = factoryId;
    }

    @Column(name = "S_BRAND_NAME", length = 128)
    public String getBrandName() {
        return brandName;
    }

    public void setBrandName(String brandName) {
        this.brandName = brandName;
    }

    @Column(name = "I_STATUS")
    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    @Column(name = "S_CODE", length = 128)
    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @Column(name = "S_BAR_CODE", length = 128)
    public String getBarCode() {
        return barCode;
    }

    public void setBarCode(String barCode) {
        this.barCode = barCode;
    }

    @Column(name = "I_CATE_ID")
    public Long getCateId() {
        return cateId;
    }

    public void setCateId(Long cateId) {
        this.cateId = cateId;
    }

    @Column(name = "S_CATE_NAME", length = 128)
    public String getCateName() {
        return cateName;
    }

    public void setCateName(String cateName) {
        this.cateName = cateName;
    }

    @Column(name = "S_INTRODUCE", length = 2048)
    public String getIntroduce() {
        return introduce;
    }

    public void setIntroduce(String introduce) {
        this.introduce = introduce;
    }

    @Column(name = "I_UNIT")
    public Integer getUnit() {
        return unit;
    }

    public void setUnit(Integer unit) {
        this.unit = unit;
    }

    @Column(name = "S_HEAD_PATH", length = 512)
    public String getHeadPath() {
        return headPath;
    }

    public void setHeadPath(String headPath) {
        this.headPath = headPath;
    }

    @Column(name = "S_PIC_PATH", length = 512)
    public String getPicPath() {
        return picPath;
    }

    public void setPicPath(String picPath) {
        this.picPath = picPath;
    }

    @Column(name = "I_SHOP_SALES")
    public Integer getShopSales() {
        return shopSales;
    }

    public void setShopSales(Integer shopSales) {
        this.shopSales = shopSales;
    }

    @Column(name = "I_DEL_FLAG")
    public Integer getDelFlag() {
        return delFlag;
    }

    public void setDelFlag(Integer delFlag) {
        this.delFlag = delFlag;
    }

    @Column(name = "I_CREATED_ID")
    public Long getCreatedId() {
        return createdId;
    }

    public void setCreatedId(Long createdId) {
        this.createdId = createdId;
    }

    @Column(name = "S_CREATED_NAME", length = 32)
    public String getCreatedName() {
        return createdName;
    }

    public void setCreatedName(String createdName) {
        this.createdName = createdName;
    }


    @Column(name = "S_REMARK", length = 1024)
    public String getRemark() {
        return remark;
    }

    public void setRemark(String remark) {
        this.remark = remark;
    }

    @Column(name = "I_SEQ")
    public Integer getSeq() {
        return seq;
    }

    public void setSeq(Integer seq) {
        this.seq = seq;
    }

    @Column(name = "D_SHELVE_TIME")
    public Date getShelveTime() {
        return shelveTime;
    }

    public void setShelveTime(Date shelveTime) {
        this.shelveTime = shelveTime;
    }

    @Transient
    public Double getPackagePrice() {
        return packagePrice;
    }

    public void setPackagePrice(Double packagePrice) {
        this.packagePrice = packagePrice;
    }

    /**
     * 商品状态枚举
     */
    public enum Status {

        /**
         * 待发布
         */
        ToPublish(1, "待发布"),

        /**
         * 已上架
         */
        OnSale(2, "已上架"),

        /**
         * 已下架
         */
        NoSale(3, "已下架");

        /**
         * 枚举值
         */
        private Integer value;

        /**
         * 枚举中文
         */
        private String name;

        /**
         * 构造方法
         *
         * @param value 枚举值
         * @param name  枚举中文
         */
        Status(Integer value, String name) {
            this.value = value;
            this.name = name;
        }

        /**
         * 由数字得是否多实例枚举对象
         *
         * @param value 枚举值
         * @return 返回中文
         */
        public static Status getEnum(int value) {
            Status[] source = Status.values();
            for (int i = 0; i < source.length; i++) {
                if (source[i].getValue() == value) {
                    return source[i];
                }
            }
            return null;
        }

        /**
         * 取值
         *
         * @return 返回枚举值
         */
        public int getValue() {
            return this.value;
        }

        /**
         * 取中文名称
         *
         * @return 返回枚举中文
         */
        public String getName() {
            return this.name;
        }

    }

    /**
     * 商品类型
     * 1-单品
     * 2-套餐
     */
    public enum Type {

        /**
         * 单品
         */
        Single(1, "单品"),

        /**
         * 套餐
         */
        Package(2, "套餐");

        /**
         * 枚举值
         */
        private Integer value;

        /**
         * 枚举中文
         */
        private String name;

        /**
         * 构造方法
         *
         * @param value 枚举值
         * @param name  枚举中文
         */
        Type(Integer value, String name) {
            this.value = value;
            this.name = name;
        }

        /**
         * 由数字得是否多实例枚举对象
         *
         * @param value 枚举值
         * @return 返回中文
         */
        public static Type getEnum(int value) {
            Type[] source = Type.values();
            for (int i = 0; i < source.length; i++) {
                if (source[i].getValue() == value) {
                    return source[i];
                }
            }
            return null;
        }

        /**
         * 取值
         *
         * @return 返回枚举值
         */
        public int getValue() {
            return this.value;
        }

        /**
         * 取中文名称
         *
         * @return 返回枚举中文
         */
        public String getName() {
            return this.name;
        }

    }
}

