package com.catt.wfx.web.controller.admin.productMgr;

import com.catt.common.base.pojo.search.Page;
import com.catt.common.base.pojo.search.Pageable;
import com.catt.common.web.controller.BaseController;
import com.catt.common.web.spring.resolver.annotation.CurrentUser;
import com.catt.wfx.repository.form.productMgr.ProductFromApp;
import com.catt.wfx.service.productMgr.ProductService;
import com.catt.wfx.service.pub.UrlService;
import org.springframework.stereotype.Controller;
import org.springframework.util.Assert;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Description:商品管理Controller
 * Created by 2017-01-06  14:51.
 * author: Zhou mingxiang
 */
@Controller("admin.productMgr.productInfo")
@RequestMapping(value = "/admin/productMgr/productInfo")
public class ProductInfoController extends BaseController {

    //商品管理服务接口
    @Resource(name = "productServiceImpl")
    private ProductService productService;

    // 商品管理服务接口
    @Resource(name = "urlServiceImpl")
    private UrlService urlService;

    /**
     * 获取商品信息列表
     *
     * @param cateId    商品分类标识
     * @param isInShop  是否上架
     * @param pageNo
     * @param pageSize
     * @param useType 使用类型 1-普通  2-进货清单
     * @return
     */
    @RequestMapping(value = {"/findProductInfoByPage"}, method = RequestMethod.GET)
    @ResponseBody
    public Page<Map> findProductInfoByPage(@CurrentUser Long cusId, Long cateId, Integer isInShop, String zhName,
                                           Integer pageNo, Integer pageSize, Integer useType) {
        Pageable pageable = new Pageable(pageNo, pageSize);

        ProductFromApp productFromApp = new ProductFromApp();
        productFromApp.setCateId(cateId);
        productFromApp.setCusId(cusId);
        productFromApp.setIsInShop(isInShop);
        productFromApp.setZhName(zhName);
        //是否微信商城调用
        productFromApp.setWechat(false);
        productFromApp.setUseType(useType);
        return productService.findProductInfoByPage(productFromApp, pageable);
    }

    /**
     * 获取商品详细信息
     *
     * @param id 商品标识
     * @param useType 使用类型 1-普通  2-进货清单
     * @return
     */
    @RequestMapping(value = {"/findProductInfoDetail"}, method = RequestMethod.GET)
    @ResponseBody
    public Map findProductInfoDetail(@CurrentUser Long cusId, Long id, Integer useType) {
        Assert.notNull(id, "商品标识不能为空");
        return productService.findProductInfoDetail(cusId, id, useType);
    }

    /**
     * 获取商品规格及价格列表
     *
     * @param cusId 用户标识
     * @param id 商品标识
     * @param useType 使用类型 1-普通，2-进货。不传代表“普通”
     * @return
     */
    @RequestMapping(value = "/findSpecAndPrice", method = RequestMethod.GET)
    @ResponseBody
    public Map findSpecAndPrice(@CurrentUser Long cusId, Long id, Integer useType) {
        Assert.notNull(id, "商品标识不能为空");
        return productService.findSpecAndPrice(id, cusId, useType);
    }

    /**
     * 获取所有商品类型列表
     * @return
     */
    @RequestMapping(value = "/getAllCate")
    @ResponseBody
    public List<Map> getAllCate(){
        return productService.getAllCate();
    }


    /**
     * 获取商品分享短链接
     *
     * @param productId 商品标识
     * @return
     */
    @RequestMapping(value = {"/getWXProductDetailUrl"}, method = RequestMethod.GET)
    @ResponseBody
    public Map getWXProductDetailUrl(@CurrentUser Long cusId, Long productId) {
        Map map = new HashMap<>();
        map.put("shortUrl", urlService.getWXProductDetailUrl(cusId, productId));
        return map;
    }
}
