package com.catt.wfx.web.controller.safeMgr;

import com.catt.common.module.security.repository.entity.Right;
import com.catt.common.module.security.service.RightService;
import com.catt.common.util.collections.MapUtil;
import com.catt.common.util.lang.StringUtil;
import com.catt.common.web.Message;
import com.catt.common.web.controller.BaseController;
import com.catt.wfx.service.base.pub.SafeMgrBaseService;
import org.apache.commons.lang.RandomStringUtils;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.util.Assert;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import java.util.Map;

@Controller("safeMgr.rightController")
@RequestMapping({ "/safeMgr/right" })
public class RightController extends BaseController {

    @Resource(name = "rightServiceImpl")
    private RightService rightService;

    @Resource
	private SafeMgrBaseService safeMgrService;

    /**
     * 权限管理首页
     * @return
     */
    @RequestMapping(value = "/tree", method = RequestMethod.GET)
    public String main() {
        return "/safeMgr/right/list";
    }

    /**
     * 新增权限
     * @param model
     * @return
     */
    @RequestMapping(value = {"/addEdit", "/addEdit/"},method = RequestMethod.GET)
    public String addEdit(Model model, @RequestParam Map<String, Object> param) {
        String type = MapUtil.getString(param, "type");
        Long id = MapUtil.getLong(param, "id");
        if(StringUtil.isBlank(type)){
            Right right = rightService.find(id);
            model.addAttribute("right", right);
            model.addAttribute("app", right.getApp());
        }else{
            if("-1".equals(type)){
                model.addAttribute("parentId", id);
            }else if("0".equals(type)){
                Right right = rightService.find(id);
                if(right.getParent() == null){
                    model.addAttribute("parentId", -1);
                }else{
                    model.addAttribute("parentId", right.getParent().getId());
                }
            }
            String a = RandomStringUtils.randomNumeric(15);
            Long app = Long.parseLong(a);
            model.addAttribute("app",app);
        }
        return "/safeMgr/right/addEdit";
    }

    /**
     * 保存
     * @return
     */
    @RequestMapping(value = "/save", method = RequestMethod.POST)
    @ResponseBody
    public Message save(@RequestParam Map<String, Object> param) {
        rightService.addRight(param);
        return SUCCESS_MSG;
    }

    /**
     * 修改
     * @return
     */
    @RequestMapping(value = "/update", method = RequestMethod.POST)
    @ResponseBody
    public Message update(@RequestParam Map<String, Object> param) {
        rightService.updateRight(param);
        return SUCCESS_MSG;
    }

    /**
     * 打开修改权限页面
     * @param parentId
     * @param model
     * @return
     */
    @RequestMapping(value ={"/edit","/edit/" },method = RequestMethod.GET)
    public String toEditView( Long parentId, ModelMap model) {
        Right right = rightService.find(parentId);
        if(right.getIsEnabled()){
            right.setEnabled("1");
        }else{
            right.setEnabled("0");
        }
        model.addAttribute("right",right );

        return "/safeMgr/right/addEdit";
    }

    /**
     * 删除权限
     * @param id
     * @return
     */
    @RequestMapping(value = "/delete")
    @ResponseBody
    public Message del(Long[] id) {
		Assert.notNull(id);
		Message msg = new Message();
		try {
			rightService.delete(id);
			msg.setResult(1);
			msg.setContent("操作成功！");
		} catch (DataIntegrityViolationException e) {
			msg.setResult(0);
			msg.setContent("本条记录已被其他信息引用，不能删除！");
		} catch (Exception e) {
			msg.setResult(0);
			msg.setContent("操作失败！");
		}
		return msg;
    }

    /**
	 * treeGrid列表
	 * 
	 * @param id
	 *            父节点Id
	 * @param roleId
     *             角色ID
	 * @return 执行结果
	 */
	@RequestMapping(value = "/treeList/{id}")
	@ResponseBody
	public Message treeList(@PathVariable Long id, Long roleId) {
        Map<String, Object> result = safeMgrService.getRightTree(id, roleId);
		return Message.success("").addResult(result);
	}

}
