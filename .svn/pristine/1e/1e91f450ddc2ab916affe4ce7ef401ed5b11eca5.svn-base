var treeSetting;//分类树配置
var cateId; //当前选中的分类ID
var specList = []; //规格列表
var paramList = []; //参数列表
var specIndex; //当前选中的规格下标
seajs.use(['$', 'template', 'msgBox', 'util', 'jquery.json', 'pageBar'],
    function ($, template, msgBox, util, pageBar) {
        /** 初始化处理器 */
        var InitHandler = (function () {
            return {
                /** 初始化入口 */
                init: function () {
                    this.initPage();
                    this.initEvent();
                    this.initData();
                },

                /** 初始化界面 */
                initPage: function () {
                    //初始化 商品分类 树
                    treeSetting = {
                        check: {
                            enable: true,
                            chkboxType: { "Y": "s", "N": "ps" }
                        },
                        view: {
                            selectedMulti: false,
                            showIcon: true
                        },
                        edit: {
                            enable: true,
                            showRemoveBtn: false,
                            showRenameBtn: false
                        },
                        data: {
                            keep: {
                                parent: true,
                                leaf: true
                            },
                            simpleData: {
                                enable: true
                            },
                            showTitle:true, //是否显示节点title信息提示 默认为true
                            key: {
                                title:"title" //设置title提示信息对应的属性名称 也就是节点相关的某个属性
                            }
                        },
                        callback: {
                            onClick: EventHandler.zTreeOnClick
                        }
                    };
                    EventHandler.getCateTree();
                },

                /** 初始化事件绑定 */
                initEvent: function () {
                    //动态绑定click(动态生成的html)
                    $("#specList").on('click', '.xw_brand', function(){
                        $(this).parents("tr").siblings("tr").removeClass("on");
                        $(this).parents("tr").addClass("on");
                        EventHandler.loadSpecDetail($(this).attr("data-value"));
                    });
                    $("#specDetailList").on('click', '.delethis', function(){
                        EventHandler.delSpecDetail($(this).attr("data-value"));
                    });
                    $("#addSpecDetail").bind("click", EventHandler.addSpecDetail);

                    $("#specList").on('click', '.deleTit', function(){
                        EventHandler.delSpec($(this).attr("data-value"));
                    });
                    $("#specList").on('click', '.editTit', function(){
                        EventHandler.editSpec($(this).attr("data-value"));
                    });
                    $("#addSpec").bind("click", EventHandler.addSpec);

                    $("#paramList").on('click', '.deleTit', function(){
                        EventHandler.delParam($(this).attr("data-value"));
                    });
                    $("#paramList").on('click', '.editTit', function(){
                        EventHandler.editParam($(this).attr("data-value"));
                    });
                    $("#addParam").bind("click", EventHandler.addParam);

                    // 分类增、改、删
                    $("#addCateBtn").bind("click", EventHandler.addCate);
                    $("#modifyCateBtn").bind("click", EventHandler.modifyCate);
                    $("#delCateBtn").bind("click", EventHandler.delCate);

                },

                /** 初始化数据加载 */
                initData: function () {
                }
            };
        })();

        /** 事件处理器 */
        var EventHandler = (function () {
            return {
                //加载分类树
                loadTree : function(backData){
                    var zNodes02 = [
                        //{id: -1, pId: 0, name: "商品列表", open: true}
                    ];
                    $.each(backData, function (i, item) {
                        var name = item.name;
                        var title = item.name;
                        if(name.length > 7){ //名称过长显示省略号
                            name = name.substr(0, 6) + "...";
                        }
                        zNodes02.push({
                            id: item.id,
                            pId: item.parentId,
                            name: name,
                            title: title,
                            //icon: path + "/resources/images/" + (item.status == 1 ? "normal.png" : "overdue.png"),
                            open: false
                        });
                    });
                    $.fn.zTree.init($("#tree"), treeSetting, zNodes02);
                    EventHandler.reset(1);
                },
                //获取分类树
                getCateTree : function(){
                    DataHandler.getCates(null, function (backData) {
                        EventHandler.loadTree(backData);
                    });
                },
                //勾选当前页中的所有行。
                checkAll : function(tag, local){
                    //全选
                    if($(local).hasClass("tickOn")){
                        $(local).removeClass("tickOn");
                        $(tag).removeClass("tickOn");
                    }else{
                        $(local).addClass("tickOn");
                        $(tag).addClass("tickOn");
                    }
                },
                //新增规格
                addSpec: function(){
                    if(typeof(cateId) == "undefined"){
                        msgBox.tips("请先选择商品分类!");
                        return;
                    }
                    msgBox.exWindow.open({
                        title: '新增商品规格',
                        url: path + '/admin/basicConfig/productCate/addEditSpec.html',
                        width: '390px',
                        height: '166px',
                        extraParams: {specList: specList, cateId: cateId},
                        close: function (result) {
                            if(result){
                                EventHandler.getCateAttr();
                                EventHandler.reset(2);
                            }
                        }
                    });
                },
                //编辑规格
                editSpec: function(i){
                    msgBox.exWindow.open({
                        title: '修改商品规格',
                        url: path + '/admin/basicConfig/productCate/addEditSpec.html',
                        width: '390px',
                        height: '166px',
                        extraParams: {specList: specList, cateId: cateId, specIndex: i},
                        close: function (result) {
                            if(result){
                                EventHandler.getCateAttr();
                                EventHandler.reset(2);
                            }
                        }
                    });
                },
                //删除规格
                delSpec: function(i){
                    msgBox.confirm({
                        title: '提示',
                        msg: "<center><h3>确定删除所选商品规格？</h3><span style='color:gray'>关联了该商品规格的商品等信息请自行移步相关菜单进行删除</span></center>",
                        callback: function (btnType) {
                            if (btnType == 'ok') {
                                specList.remove(i);
                                var param = {cateId: cateId, type: 1, specJson: $.toJSON(specList)};
                                DataHandler.saveCateAttr(param, function (backData) {
                                    msgBox.tips("操作成功");
                                    EventHandler.reset(2);
                                    var specHtml = template('template_specList', {content : specList});
                                    $('#specList').html(specHtml);
                                });
                            }
                        }
                    });
                },
                //新增规格明细
                addSpecDetail: function(){
                    if(typeof(specIndex) == "undefined"){
                        msgBox.tips("请先选择规格!");
                        return;
                    }
                    msgBox.exWindow.open({
                        title: '添加规格明细',
                        url: path + '/admin/basicConfig/productCate/addSpecDetail.html',
                        width: '390px',
                        height: '166px',
                        extraParams: {specList: specList, cateId: cateId, specIndex: specIndex},
                        close: function (result) {
                            if(result){
                                specList = result;
                                var name = specList[specIndex].name;
                                var content = specList[specIndex].detail;
                                var html = template('template_specDetailList', {content: content, name: name});
                                $('#specDetailList').html(html);
                            }
                        }
                    });
                },
                // 点击规格，查询规格明细
                loadSpecDetail: function(i){
                    specIndex = i;
                    var specDetailList = specList[i].detail;
                    var name = specList[i].name;
                    var html = template('template_specDetailList', {content: specDetailList, name: name});
                    $('#specDetailList').html(html);
                },
                // 删除规格明细
                delSpecDetail: function(i){
                    msgBox.confirm({
                        title: '提示',
                        msg: "<center><h3>确定删除所选规格明细？</h3><span style='color:gray'>关联了该规格明细的商品等信息请自行移步相关菜单进行删除</span></center>",
                        callback: function (btnType) {
                            if (btnType == 'ok') {
                                var specDetailList = specList[specIndex].detail;
                                specDetailList.remove(i);
                                var param = {cateId: cateId, type: 1, specJson: $.toJSON(specList)};
                                DataHandler.saveCateAttr(param, function (backData) {
                                    msgBox.tips("操作成功");
                                    var name = specList[specIndex].name;
                                    var html = template('template_specDetailList', {content: specDetailList, name: name});
                                    $('#specDetailList').html(html);
                                });
                            }
                        }
                    });
                },
                //新增参数
                addParam: function(){
                    if(typeof(cateId) == "undefined"){
                        msgBox.tips("请先选择商品分类!");
                        return;
                    }
                    msgBox.exWindow.open({
                        title: '新增参数',
                        url: path + '/admin/basicConfig/productCate/addEditAttr.html',
                        width: '390px',
                        height: '210px',
                        extraParams: {paramList: paramList, cateId: cateId},
                        close: function (result) {
                            if(result){
                                paramList = result;
                                var html = template('template_paramList', {content: paramList});
                                $('#paramList').html(html);
                            }
                        }
                    });
                },
                //编辑参数
                editParam: function(i){
                    msgBox.exWindow.open({
                        title: '修改参数',
                        url: path + '/admin/basicConfig/productCate/addEditAttr.html',
                        width: '390px',
                        height: '210px',
                        extraParams: {paramList: paramList, cateId: cateId, index: i},
                        close: function (result) {
                            if(result){
                                paramList = result;
                                var html = template('template_paramList', {content: paramList});
                                $('#paramList').html(html);
                            }
                        }
                    });
                },
                //删除参数
                delParam: function(i){
                    msgBox.confirm({
                        title: '提示',
                        msg: "<center><h3>确定删除所选商品参数？</h3><span style='color:gray'>关联了该商品参数的商品等信息请自行移步相关菜单进行删除</span></center>",
                        callback: function (btnType) {
                            if (btnType == 'ok') {
                                paramList.remove(i);
                                var param = {cateId: cateId, type: 2, attrDefineJson: $.toJSON(paramList)};
                                DataHandler.saveCateAttr(param, function (backData) {
                                    msgBox.tips("操作成功");
                                    var html = template('template_paramList', {content : paramList});
                                    $('#paramList').html(html);
                                });
                            }
                        }
                    });
                },
                //列表数据重置
                reset: function (type) {
                    if(type == 1){ //点击树形分类
                        $("#specList").html("");
                        $("#specDetailList").html("");
                        $("#paramList").html("");
                    }else if(type == 2){ //点击规格
                        $("#specDetailList").html("");
                    }
                    var a;
                    specIndex = a;
                },
                //点击分类，查询商品参数
                zTreeOnClick: function (event, treeId, treeNode) {
                    EventHandler.reset(1);
                    cateId = treeNode.id
                    var params = {};
                    params.cateId = treeNode.id;
                    EventHandler.getCateAttr(params);
                },
                // 加载商品参数、规格、规格明显
                getCateAttr: function (params, callback) {
                    DataHandler.getCateAttr(params, function (backData) {
                        specList = [];
                        paramList = [];
                        if(backData.specJson != ""){
                            specList = $.evalJSON(backData.specJson);
                        }
                        if(backData.attrDefineJson != ""){
                            paramList = $.evalJSON(backData.attrDefineJson);
                        }
                        var specHtml = template('template_specList', {content : specList});
                        $('#specList').html(specHtml);
                        var paramHtml = template('template_paramList', {content: paramList});
                        $('#paramList').html(paramHtml);
                        callback();
                    });
                },
                // 新增类型
                addCate: function () {
                    var treeObj = $.fn.zTree.getZTreeObj("tree");
                    var nodes = treeObj.getSelectedNodes(true);
                    var level = 1;
                    var cateId = "";
                    var parentId = "";
                    var pName = "";
                    var pNote = nodes[0];
                    if(nodes.length > 0){
                        cateId = pNote.id;
                        parentId = pNote.pId;
                        level = pNote.level + 2;
                        pName = pNote.name;
                    }
                    if(level > 3){
                        msgBox.tips("该层不可新增子类型！");
                        return;
                    }
                    var extraParams = {pName: pName, level: level};
                    msgBox.exWindow.open({
                        title: '新增商品分类',
                        url: path + '/admin/basicConfig/productCate/addCate.html?parentId='+cateId,
                        width: '390px',
                        height: '256px',
                        extraParams: extraParams,
                        close: function (result) {
                            if(result){
                                var obj = $.evalJSON(result);
                                var name = obj.name;
                                var title = obj.name;
                                if(name.length > 7){ //名称过长显示省略号
                                    name = name.substr(0, 6) + "...";
                                }
                                var newNode = {id: obj.id, name: name, pId: cateId, title: title};
                                if(pNote && !pNote.isParent){
                                    pNote.isParent = true;
                                    treeObj.updateNode(pNote);
                                }
                                treeObj.addNodes(pNote, newNode);
                            }
                        }
                    });
                },
                // 修改类型
                modifyCate: function () {
                    var treeObj = $.fn.zTree.getZTreeObj("tree");
                    var nodes = treeObj.getSelectedNodes(true);
                    if (nodes.length == 1) {
                        var note = nodes[0];
                        var pNote = note.getParentNode();
                        var extraParams = {pName: "", level: note.level+1};
                        if(pNote){
                            extraParams.pName = pNote.name;
                        }
                        msgBox.exWindow.open({
                            title: '修改商品类型',
                            url: path + '/admin/basicConfig/productCate/editCate/' + note.id,
                            width: '390px',
                            height: '256px',
                            extraParams: extraParams,
                            close: function (result) {
                                if(result){
                                    var obj = $.evalJSON(result);
                                    var name = obj.name;
                                    note.title = obj.name;
                                    if(name.length > 7){ //名称过长显示省略号
                                        name = name.substr(0, 6) + "...";
                                    }
                                    note.name = name;
                                    treeObj.updateNode(note);
                                }
                            }
                        });
                    } else {
                        msgBox.tips("请选择且只能选择一个商品类型进行修改");
                    }
                },
                // 删除类型
                delCate: function () {
                    var treeObj = $.fn.zTree.getZTreeObj("tree");
                    var nodes = treeObj.getCheckedNodes(true);
                    if (nodes.length >= 1) {
                        msgBox.confirm({
                            title: '提示',
                            //msg: "<center><h3>确定删除所选商品类型？</h3><span style='color:gray'>关联了该类型的商品等信息请自行移步相关菜单进行删除</span></center>",
                            msg: "确定删除所选商品类型？",
                            callback: function (btnType) {
                                if (btnType == 'ok') {
                                    var ids = "";
                                    $.each(nodes, function (i, item) {
                                        var parent = item.getParentNode();
                                        if(parent == null || !parent.checked){
                                            ids += item.id + ",";
                                        }
                                    });
                                    if(ids.indexOf(",") != -1){
                                        ids = ids.substring(0, ids.length - 1);
                                    }
                                    DataHandler.delCate({cateIds: ids}, function (backData) {
                                        msgBox.tips("操作成功");
                                        EventHandler.getCateTree();
                                    });
                                }
                            }
                        });
                    } else {
                        msgBox.tips("请勾选商品类型!");
                    }
                }

            };
        })();

        /** 数据处理器 */
        var DataHandler = (function () {
            return {
                /**
                 * 获取商品规格、参数列表
                 */
                getCateAttr: function (param, callback) {
                    $.post(path + '/admin/basicConfig/productCate/getCateAttr', param, function (backData) {
                        callback(backData);
                    });
                },
                /**
                 * 保存规格
                 */
                saveCateAttr: function (param, callback) {
                    $.post(path + "/admin/basicConfig/productCate/saveCateAttr", param, function (result) {
                        callback(result);
                    });
                },
                /**
                 * 获取类型列表
                 */
                getCates: function (param, callback) {
                    $.post(path + '/admin/basicConfig/productCate/getAllCate', param, function (backData) {
                        callback(backData);
                    });
                },
                /**
                 * 删除类型
                 */
                delCate: function (param, callback) {
                    $.post(path + '/admin/basicConfig/productCate/deleteCate', param, function (backData) {
                        callback(backData);
                    });
                }
            };
        })();

        /** 页面入口 */
        $(function () {
            InitHandler.init();
        });

    });

/**
 *删除数组指定下标或指定对象
 */
Array.prototype.remove=function(obj){
    for(var i =0;i <this.length;i++){
        var temp = this[i];
        if(!isNaN(obj)){
            temp=i;
        }
        if(temp == obj){
            for(var j = i;j <this.length;j++){
                this[j]=this[j+1];
            }
            this.length = this.length-1;
        }
    }
}