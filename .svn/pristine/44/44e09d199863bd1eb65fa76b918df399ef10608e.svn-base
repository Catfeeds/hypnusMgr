package com.catt.wfx.service.impl.statisti;

import com.catt.common.base.pojo.search.Page;
import com.catt.common.base.pojo.search.Pageable;
import com.catt.common.util.collections.CollectionUtil;
import com.catt.common.util.collections.MapUtil;
import com.catt.wfx.repository.dao.customerMgr.CusInfoDao;
import com.catt.wfx.repository.data.comEnum.DateDimension;
import com.catt.wfx.repository.entity.customerMgr.CusInfo;
import com.catt.wfx.service.base.customerMgr.CusInfoBaseService;
import com.catt.wfx.service.statisti.CusStatistiService;
import org.springframework.stereotype.Service;
import util.StatUtil;

import javax.annotation.Resource;
import java.util.*;

/**
 * Description:统计分析-用户统计
 * date: 2017-03-03 11:25
 * author: Chen Chusheng
 */
@Service("cusStatistiServiceImpl")
public class CusStatistiServiceImpl implements CusStatistiService {

    // 用户信息服务接口
    @Resource(name = "cusInfoBaseServiceImpl")
    private CusInfoBaseService cusInfoBaseService;

    // 用户信息Dao接口
    @Resource(name = "cusInfoDaoImpl")
    private CusInfoDao cusInfoDao;

    /**
     * 报表横坐标最多限制数
     */
    private static final int SHOW_TIME = 15;
    /**
     * 一年十二个月
     */
    private static final int MONTH_TIME = 12;


    /**
     * 获取系统上的各类用户人数
     *
     * @return totalMember 会员数
     * totalShoper 店主数
     */
    @Override
    public Map getPersonNum() {
        Integer totalMember = cusInfoDao.getPersonNum(
                new ArrayList<Integer>() {{
                    add(CusInfo.Type.RegistUser.getValue());
                }});
        Integer totalShoper = cusInfoDao.getPersonNum(
                new ArrayList<Integer>() {{
                    add(CusInfo.Type.ShopOwner.getValue());
                }});
        Map<String, Integer> result = new HashMap<>();
        result.put("totalMember", totalMember);
        result.put("totalShoper", totalShoper);
        return result;
    }

    /**
     * 查询用户折线图
     *
     * @param startCreateDate
     * @param endCreateDate
     * @param dateDimension   统计周期
     * @param cusType         用户类型
     * @return
     */
    @Override
    public List<Map> getCusStatistice(Date startCreateDate, Date endCreateDate, DateDimension dateDimension, Integer cusType) {
        // 方法返回数据
        List<Map> resultList = new ArrayList<>();
        // 重整数据
        Map result = null;

        List<String> dateTime = StatUtil.getStatTime(startCreateDate, endCreateDate, dateDimension, SHOW_TIME, SHOW_TIME);
        List<Map> dataList = cusInfoDao.cusStatisti(startCreateDate, endCreateDate, dateDimension, cusType);
        for (String time : dateTime) {
            result = new HashMap<>();
            result.put("time", time);
            if (CollectionUtil.isNotEmpty(dataList)) {
                for (Map map : dataList) {
                    if (time.equals(MapUtil.getString(map, "time"))) {
                        result.put("cusCount", MapUtil.getInteger(map, "cusCount"));
                        break;
                    } else {
                        result.put("cusCount", 0);
                    }
                }
            } else {
                result.put("cusCount", 0);
            }
            resultList.add(result);
        }

        return resultList;
    }

    /**
     * 新增人数分段查询列表
     *
     * @param startDate
     * @param endDate
     * @param pageable
     * @return
     */
    @Override
    public Page<Map> getPersonPage(Date startDate, Date endDate, Pageable pageable) {
        Page<Map> cusPage = cusInfoDao.getPersonPage(startDate, endDate, pageable);
        return cusPage;
    }

}
