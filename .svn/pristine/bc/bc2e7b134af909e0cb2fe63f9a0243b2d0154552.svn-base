package com.catt.wfx.web.controller.admin.productMgr;

import com.catt.common.base.pojo.search.Page;
import com.catt.common.base.pojo.search.Pageable;
import com.catt.common.web.Message;
import com.catt.common.web.controller.BaseController;
import com.catt.common.web.spring.resolver.annotation.CurrentUser;
import com.catt.wfx.service.productMgr.ProductDocumentService;
import org.springframework.stereotype.Controller;
import org.springframework.util.Assert;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import java.util.Map;

/**
 * 商品文案控制器
 */
@Controller("admin.productMgr.productDocumentController")
@RequestMapping(value = "/admin/productMgr/productDocument")
public class ProductDocumentController extends BaseController {

    // 商品文案服务接口
    @Resource(name = "productDocumentServiceImpl")
    private ProductDocumentService productDocumentService;

    /**
     * 获取商品文案列表
     *
     * @param productId 商品标识
     * @param type      文案类型
     * @param pageable
     * @return
     */
    @ResponseBody
    @RequestMapping(value = {"/getProductDocumentByPage"}, method = RequestMethod.GET)
    public Page<Map> getProductDocumentByPage(@CurrentUser Long cusId, Long productId, Integer type,
                                              @RequestParam(defaultValue = "2", required = false) Integer status, Pageable pageable) {
        return productDocumentService.getProductDocumentByPage(cusId, productId, type, status, pageable);
    }

    /**
     * 保存商品文案信息
     *
     * @param createdId   创建人员标识
     * @param createdName 创建人员名称
     * @param productId   商品标识
     * @param desc        文案内容
     * @param path        文案图片附件标识，多个以英文逗号分隔
     */
    @ResponseBody
    @RequestMapping(value = {"/save"}, method = RequestMethod.POST)
    public Message save(@CurrentUser Long createdId, @CurrentUser("name") String createdName, Long productId, String desc, String path) {
        productDocumentService.save(createdId, createdName, productId, desc, path);
        return Message.success("");
    }

    /**
     * 删除商品文案
     *
     * @param id 商品文案标识
     */
    @ResponseBody
    @RequestMapping(value = "/delete", method = RequestMethod.POST)
    public Message delete(Long id) {
        Assert.notNull(id, "商品文案标识不能为空");
        productDocumentService.delete(id);
        return Message.success("");
    }

}
