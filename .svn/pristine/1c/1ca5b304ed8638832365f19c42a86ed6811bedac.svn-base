package com.catt.wfx.web.controller.admin.basicConfig;

import com.catt.common.base.pojo.message.MessageConstants;
import com.catt.common.base.pojo.search.Page;
import com.catt.common.base.pojo.search.Pageable;
import com.catt.common.util.lang.StringUtil;
import com.catt.common.web.Message;
import com.catt.common.web.controller.BaseController;
import com.catt.common.web.spring.resolver.annotation.CurrentUser;
import com.catt.wfx.repository.entity.customerMgr.FactoryInfo;
import com.catt.wfx.repository.entity.pub.PubSetup;
import com.catt.wfx.repository.form.customerMgr.FactoryInfoFrom;
import com.catt.wfx.service.base.pub.PubSetupBaseService;
import com.catt.wfx.service.basicConfig.FactoryInfoService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import java.util.Map;

/**
 * Description:厂家管理
 * Created by 2017-10-20  14:32.
 * author: Zhou mingxiang
 */
@RequestMapping({"/admin/basiconfig/factory"})
@Controller("admin.basicConfig.factoryMgrController")
public class FactoryMgrController extends BaseController {

    //厂家管理服务
    @Resource(name = "factoryInfoServiceImpl")
    private FactoryInfoService factoryInfoService;


    //系统全局设置服务接口
    @Resource(name = "pubSetupBaseServiceImpl")
    private PubSetupBaseService pubSetupBaseService;

    //跳转到厂家管理首页
    @RequestMapping(value = {"/index.html"}, method = RequestMethod.GET)
    public String toIndex() {

        return "/admin/basicConfig/factory/index";
    }


    //跳转到厂家管理首页
    @RequestMapping(value = {"/addEdit.html"}, method = RequestMethod.GET)
    public String toAddEdit(Long id, Model model) {
        if(id != null) {
            FactoryInfo factoryInfo = factoryInfoService.getFactoryInfoById(id);
            model.addAttribute("entity", factoryInfo);
        }
        return "/admin/basicConfig/factory/addEdit";
    }

    //跳转到厂家选择页面
    @RequestMapping(value = {"/selectFactory.html"}, method = RequestMethod.GET)
    public String selectFactory() {

        return "/admin/basicConfig/factory/selectFactory";
    }

    /**
     * 获取厂家信息列表
     *
     * @param factoryName 厂家名称
     * @param pageable    分页
     * @return
     */
    @RequestMapping(value = {"/getFactoryInfoByPage"}, method = RequestMethod.POST)
    @ResponseBody
    public Page<Map> getFactoryInfoByPage(String factoryName, Pageable pageable) {
        return factoryInfoService.getFactoryInfoByPage(factoryName, pageable);
    }

    /**
     * 保存厂家信息
     *
     * @param currentUserId   操作人员标识
     * @param currentUserName 操作人员名称
     * @param factoryInfoFrom 厂家信息
     * @return
     */
    @ResponseBody
    @RequestMapping(value = {"/save"}, method = RequestMethod.POST)
    public Message save(@CurrentUser Long currentUserId, @CurrentUser("name") String currentUserName,
                        FactoryInfoFrom factoryInfoFrom) {

        if (StringUtil.checkObj(factoryInfoFrom.getId())) {
            factoryInfoService.update(factoryInfoFrom);
        } else {
            factoryInfoFrom.setId(null);
            factoryInfoFrom.setCreatedId(currentUserId);
            factoryInfoFrom.setCreatedName(currentUserName);
            factoryInfoService.save(factoryInfoFrom);
        }

        return new Message(MessageConstants.Type.success, "操作成功!");
    }

    /**
     * 删除客户档案信息
     *
     * @param ids 客户档案标识集合
     * @return
     */
    @RequestMapping(value = {"/delete"}, method = RequestMethod.POST)
    @ResponseBody
    public Message delete(Long[] ids) {
        //是否平台厂家信息
        boolean isDefalutFactoryId = false;

        //获取平台自营厂家标识
        Long defaultFactoryId = Long.parseLong(pubSetupBaseService.getSetupByCode(PubSetup.Code.selfSupport));

        for (int i = 0, len = ids.length; i < len; i++) {
            if (ids[i].equals(defaultFactoryId)) {
                isDefalutFactoryId = true;
                break;
            }
        }

        if (isDefalutFactoryId) {
            return new Message(MessageConstants.Type.warn, "平台自身厂家信息不可删除!");
        } else {

            factoryInfoService.delete(ids);
            return new Message(MessageConstants.Type.success, "操作成功!");
        }
    }


}
